name: Deploy Spring Service with Docker

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      service-dir:
        required: true
        type: string
    secrets:
      REGISTRY_TOKEN:
        required: true
      SSH_KEY:
        required: true
      SSH_PORT:
        required: false
      SSH_HOST:
        required: true
      SSH_USERNAME:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      image_name:
        value: registry.digitalocean.com/my-registry123/myspringapp-${{ inputs.service-name }}:${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Build and Push Docker Image
        working-directory: ${{ inputs.service-dir }}
        run: |
          IMAGE_NAME=registry.digitalocean.com/my-registry123/myspringapp-${{ inputs.service-name }}:${{ github.sha }}
          docker build -t $IMAGE_NAME .
          echo ${{ secrets.REGISTRY_TOKEN }} | docker login registry.digitalocean.com -u paulbundy07@gmail.com --password-stdin
          docker push $IMAGE_NAME

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT || '22' }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files via SCP
        run: |
          scp -P ${{ secrets.SSH_PORT || '22' }} -r ./${{ inputs.service-dir }}/deploy/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/opt/${{ inputs.service-dir }}/

      - name: Restart Remote App
        run: |
          ssh -p ${{ secrets.SSH_PORT || '22' }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << EOF
            cd /opt/${{ inputs.service-dir }}/
            echo "${{ secrets.REGISTRY_TOKEN }}" | docker login registry.digitalocean.com -u paulbundy07@gmail.com --password-stdin
            yq -i '.services.${{ inputs.service-name }}.image = "registry.digitalocean.com/my-registry123/myspringapp-${{ inputs.service-name }}:${{ github.sha }}"' docker-compose.yaml
            docker compose up -d --remove-orphans
          EOF
