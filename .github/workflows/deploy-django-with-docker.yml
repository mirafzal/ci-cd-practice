name: Deploy django app with docker

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy-django-with-docker.yml'
      - 'mydjangoapp/**'
  workflow_dispatch:


jobs:
  build:
    runs-on: [self-hosted, Linux, X64]

    outputs:
      image_name: registry.digitalocean.com/my-registry123/mydjangoapp:${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Build and push docker
        working-directory: ./mydjangoapp
        run: |
          docker build -t registry.digitalocean.com/my-registry123/mydjangoapp:${{ github.sha }} .
          docker login registry.digitalocean.com -u paulbundy07@gmail.com -p ${{ secrets.REGISTRY_TOKEN }}
          docker push registry.digitalocean.com/my-registry123/mydjangoapp:${{ github.sha }}

  deploy1:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./mydjangoapp/deploy/*"
          target: "/opt/mydjangoapp/"
          strip_components: 2

      - name: Restart docker compose
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /opt/mydjangoapp/
            docker login registry.digitalocean.com -u paulbundy07@gmail.com -p ${{ secrets.REGISTRY_TOKEN }}
            yq -i '.services.web.image = "${{ needs.build.outputs.image_name }}"' docker-compose.yaml
            yq -i '.services.celery.image = "${{ needs.build.outputs.image_name }}"' docker-compose.yaml
            docker compose stop nginx --timeout 60
            docker compose stop web celery --timeout 60          
            docker compose up -d --remove-orphans

#  deploy2:
#    runs-on: ubuntu-latest
#    needs:
#      - build
#      - deploy1
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Copy files via SSH
#        uses: appleboy/scp-action@v1
#        with:
#          host: ${{ secrets.SSH_HOST2 }}
#          username: ${{ secrets.SSH_USERNAME }}
#          key: ${{ secrets.SSH_KEY }}
#          port: ${{ secrets.SSH_PORT }}
#          source: "./mydjangoapp/deploy/*"
#          target: "/opt/mydjangoapp/"
#          strip_components: 2
#
#      - name: Restart docker compose
#        uses: appleboy/ssh-action@v1
#        with:
#          host: ${{ secrets.SSH_HOST2 }}
#          username: ${{ secrets.SSH_USERNAME }}
#          key: ${{ secrets.SSH_KEY }}
#          port: ${{ secrets.SSH_PORT }}
#          script: |
#            cd /opt/mydjangoapp/
#            docker login registry.digitalocean.com -u paulbundy07@gmail.com -p ${{ secrets.REGISTRY_TOKEN }}
#            yq -i '.services.web.image = "${{ needs.build.outputs.image_name }}"' docker-compose.yaml
#            docker compose stop nginx --timeout 60
#            docker compose stop web --timeout 60
#            docker compose up -d --remove-orphans
#
#  deploy3:
#    runs-on: ubuntu-latest
#    needs:
#      - build
#      - deploy2
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Copy files via SSH
#        uses: appleboy/scp-action@v1
#        with:
#          host: ${{ secrets.SSH_HOST3 }}
#          username: ${{ secrets.SSH_USERNAME }}
#          key: ${{ secrets.SSH_KEY }}
#          port: ${{ secrets.SSH_PORT }}
#          source: "./mydjangoapp/deploy/*"
#          target: "/opt/mydjangoapp/"
#          strip_components: 2
#
#      - name: Restart docker compose
#        uses: appleboy/ssh-action@v1
#        with:
#          host: ${{ secrets.SSH_HOST3 }}
#          username: ${{ secrets.SSH_USERNAME }}
#          key: ${{ secrets.SSH_KEY }}
#          port: ${{ secrets.SSH_PORT }}
#          script: |
#            cd /opt/mydjangoapp/
#            docker login registry.digitalocean.com -u paulbundy07@gmail.com -p ${{ secrets.REGISTRY_TOKEN }}
#            yq -i '.services.web.image = "${{ needs.build.outputs.image_name }}"' docker-compose.yaml
#            docker compose stop nginx --timeout 60
#            docker compose stop web --timeout 60
#            docker compose up -d --remove-orphans