name: Deploy spring product-service app with docker

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy-spring-product-service-with-docker.yml'
      - 'myspringapp/product-service/**'
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      image_name: registry.digitalocean.com/my-registry123/myspringapp-product-service:${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Build and push docker
        working-directory: ./myspringapp/product-service
        run: |
          docker build -t registry.digitalocean.com/my-registry123/myspringapp-product-service:${{ github.sha }} .
          docker login registry.digitalocean.com -u paulbundy07@gmail.com -p ${{ secrets.REGISTRY_TOKEN }}
          docker push registry.digitalocean.com/my-registry123/myspringapp-product-service:${{ github.sha }}
          
      

  deploy1:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT || '22' }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files via SCP
        run: |
          scp -P ${{ secrets.SSH_PORT || '22' }} -r ./myspringapp/deploy/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/opt/myspringapp/

      - name: Restart remote app
        run: |
          ssh -p ${{ secrets.SSH_PORT || '22' }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /opt/myspringapp/
            docker login registry.digitalocean.com -u paulbundy07@gmail.com -p ${{ secrets.REGISTRY_TOKEN }}
            yq -i '.services.product-service.image = "${{ needs.build.outputs.image_name }}"' docker-compose.yaml   
            docker compose up -d --remove-orphans
          EOF
