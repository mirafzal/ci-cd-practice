name: Deploy goapp app with docker

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy-goapp-with-docker.yml'
      - 'mygoapp/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Go Tests

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run Go tests
        working-directory: ./mygoapp
        run: |
          go mod tidy
          go test ./...

  build:
    runs-on: ubuntu-latest
    needs: test

    outputs:
      image_name: registry.digitalocean.com/my-registry123/mygoapp:${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Build and push docker
        working-directory: ./mygoapp
        run: |
          docker build -t registry.digitalocean.com/my-registry123/mygoapp:${{ github.sha }} .
          docker login registry.digitalocean.com -u paulbundy07@gmail.com -p ${{ secrets.REGISTRY_TOKEN }}
          docker push registry.digitalocean.com/my-registry123/mygoapp:${{ github.sha }}

  deploy1:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${SSH_PORT:-22} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy Files via SCP
        run: |
          scp -P ${SSH_PORT:-22} -r ./mygoapp/deploy/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/opt/mygoapp/

      - name: Restart Remote App
        run: |
          ssh -p ${SSH_PORT:-22} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << EOF
            set -e
            cd /opt/mygoapp/
            echo "${{ secrets.REGISTRY_TOKEN }}" | docker login registry.digitalocean.com -u paulbundy07@gmail.com --password-stdin
            yq -i '.services.app.image = "${{ needs.build.outputs.image_name }}"' docker-compose.yaml   
            docker compose up -d --remove-orphans
          EOF
